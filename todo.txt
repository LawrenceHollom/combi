 == INSTRUCTIONS ==
 - Add more complex random graph constructions
 - Add computation of path cover number (have java code for this?)

 == THE KITCHEN SINK ==
 - Maybe add option for increasing by number of edges or something
 - test with sink((size>0)&&(theta>=acyclic)) -> halts at n=15
 - Test fewer graphs for the very big n -> if more than 1000 then filter randomly

 == ITERATOR ==
 - Detect identical nodes in graphs and iterate over subsets more efficiently
 - e.g. there are only 3 ways to pick 2 vertices from K_{s,t}

 == BUNKBEDS ==
  - The code is very (very) slow, and naive. Should be some wins to be had in terms of speed
  - Add option to bunkbed sim to choose level of precision (maybe as a power of 2 or something)
  - Test hypothesis about number of ways with paths of length bdd by given even extra dist

 == BUGS ==
 - Maybe ->() has stopped working? Gets picked up as infix-like
 - sink(domination>10) doesn't trip on E(11)

 == INTERVAL COLOURINGS ==
 - This is slow; can't run K(7) in about a minute (then gave up)
 - Seems to be some threshold number of edges where it gets very slow.

 == HELP COMMAND ==
 - Print all the various operations.
 - And write code to do this automatically so it doesn't need maintaining.

 == EDGE DOMINATION VS DOMINATION
 - Add lossless edge domination graph; random construction from bowties
 - Then test domination numbers on these of size 40 and 50.
 -- This means 12 and 15 bowties
 - Call graph bowtie_aggregate or something.

== BOOL COMMANDS ==
- is_k_connected

== UNIT COMMANDS ==
- signature: prints out all kinds of info about the graph

 == KEEP CLIPPY HAPPY ==
 - You don't want to anger clippy.
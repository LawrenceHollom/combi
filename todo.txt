 == THE KITCHEN SINK ==
 - Maybe add option for increasing by number of edges or something
 - test with sink((size>0)&&(theta>=acyclic)) -> halts at n=15
 - Test fewer graphs for the very big n -> if more than 1000 then filter randomly
 - Only run arrow commands on successful graphs (as in until)

 == BOWTIES ==
 - Check that struct(bowties(d),num) agrees with old bowties framework
 - Then rip out old framework.

 == EDGES ==
 - Make an edge type, using encode from bunkbed.rs.
 - This can then be used to index stuff, and abstract away the usual boilerplate.
 - Aim is to have a good way of indexing by edge.

 == FLOOD FILL ==
 - Code up a generic flood fill algo; it comes up so much.
 - Adding what stops the flood fill will be the difficult bit.
 - This needs the generic edge framework for this to be feasible.

 == HOUSE OF GRAPHS ==
 - Have a new kitchen sink option for smashing through houseofgraphs
 -- Work this in with the old one in some sensible way.

 == ITERATOR ==
 - Detect identical nodes in graphs and iterate over subsets more efficiently
 - e.g. there are only 3 ways to pick 2 vertices from K_{s,t}

 == BUNKBEDS ==
  - The code is very (very) slow, and naive. Should be some wins to be had in terms of speed
  - Add some way to automatically assess the injectiveness of the stuff from bunkbed_diffs.

 == BUGS ==
 - Maybe ->() has stopped working? Gets picked up as infix-like
 - sink(domination>10) doesn't trip on E(11)

 == HELP COMMAND ==
 - Print all the various operations.
 - And write code to do this automatically so it doesn't need maintaining.

== UNIT COMMANDS ==
- signature: prints out all kinds of info about the graph

 == KEEP CLIPPY HAPPY ==
 - You don't want to anger clippy.